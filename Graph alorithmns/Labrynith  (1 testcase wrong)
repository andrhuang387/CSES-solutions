#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define f first
#define s second
#define pb push_back
#define MAXN 100001
#define INF 2000000000
#define mod 1000000007
#define loop(i,a,b) for  (int i=(a); i<= (signed)(b); i++)
#define lp(i,a) for(int i = 0;i<(signed)(a); i++)
typedef vector<int> vi;
int dy[4] = {0,0,-1,1};
int dx[4] = {1,-1,0,0};
int n, m;
struct stuff{
    int y;
    int x;
};
void bfs(int y, int x, vector<vector<char>>&grid)
{
     queue<stuff>q;
     stuff temp = { y,x, {}};
     q.push(temp);
     int counter = 0;
     while(!q.empty()){
        //if(counter%10000 ==0)cout<<counter<< " " ;
        //counter++;
        stuff v  = q.front();
        q.pop();
        if(grid[v.y][v.x] == '#')continue;
        if (grid[v.y][v.x] == 'B'){
            cout<<"YES"<<endl;
            cout<<v.steps.size()<<endl;
            for(auto it: v.steps)cout<<it;
            exit(0);
        }
        else {
            grid[v.y][v.x] = '#';
            lp(i,4){
              int ny = v.y + dy[i];
              int nx = v.x + dx[i];
              if(ny<=0 || nx<=0 || ny >n || nx > m)continue;
              if(grid[ny][nx] != '#'){
                stuff temp = {ny,nx, v.steps };
                if(i == 0)temp.steps +='R';
                if(i == 1)temp.steps +='L';
                if(i == 2) temp.steps +='U';
                if(i == 3)temp.steps +='D';
                q.push(temp);
              }
            }
        }
     }
     cout<<"NO"<<endl;

}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
   freopen("D://inp.txt","r",stdin);
   cin>>n>>m;
   vector<vector<char>> grid (n+1, vector<char>(m+1, '/'));
   int starty,startx;
   for(int i = 1 ; i<=n; i++){
    string s;
    cin>>s;
    for(int j  = 1; j <=m ;j++){
        grid[i][j] = s[j-1];
        if(s[j-1] == 'A'){
            starty = i, startx = j;
        }
    }
   }
   bfs(starty, startx, grid);


}
