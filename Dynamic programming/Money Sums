#include <bits/stdc++.h>
using namespace std;
#define MXN 200001
#define s second
#define f first
#define lli long long int
#define pb push_back
typedef vector<lli> vi;
#define lp(i, n)    for(int i = 0; i<n; i++)
#define INF 200000000
#define mod 1000000007
/*
    since n is small and x is also small, the maximum sum is around 10^5
    therefore we can make a dp of the coins available and if it is possible to make a sum of x with the coins
    if the previous element is possible with i-1 coins, then change the current position with i coins to be true
    print everytime a value is true
*/
int main()
{
   int n;
   cin>>n;
   int max_sum  = n*1000;
   vector<int> coins;
   for(int i  =0;i<n;i++){
     int x;
     cin>>x;
     coins.push_back(x);
   }
   vector<vector<bool>>dp (n+1, vector<bool> (max_sum + 1, false));
   dp[0][0] = true;
   for(int i = 1;i<=n;i++){
    for(int j  =0;j<=max_sum;j++){
        dp[i][j] = dp[i-1][j];
        int remain = j - coins[i-1];
        if(remain>=0 && dp[i-1][remain]){
            dp[i][j] = true;
        }
    }
   }
   vector<int> ans;
   for(int j = 1; j<=max_sum;j++)if(dp[n][j])ans.push_back(j);
   cout<<ans.size()<<endl;
   for(auto it: ans)cout<<it<<endl;
}

