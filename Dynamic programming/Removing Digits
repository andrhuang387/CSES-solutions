#include <bits/stdc++.h>
using namespace std;
#define MAXN 200001
#define s second
#define f first
#define lli long long int
#define pb push_back
typedef vector<lli> vi;
#define lp(i, n)    for(int i = 0; i<n; i++)
#define INF 2000000000
#define mod 1000000007
/*
    get all values of number and then do a normal dp on it 
*/
int n;
vector<int> dp;
int minimal(int num)
{
    if (num<0)return MAXN;
    if(dp[num] != INF) return dp[num];
    stringstream ss;
    ss<<num;
    string str = ss.str();
    for(auto digitchar: str){
        //cout<<"test"<<digitchar<<endl;
        int digit = digitchar -'0';
        if(digit ==0)continue;
        dp[num] = min(dp[num], minimal(num - digit)+1);
    }
    return dp[num];
}
int main() {
    int n;
    cin>>n;
    dp.resize(n+1, INF);
    dp[0] = 0;
    cout<<minimal(n);
}
