#include <bits/stdc++.h>
using namespace std;
#define MAXN 5001
#define s second
#define f first
#define lli long long int
#define pb push_back
typedef vector<lli> vi;
#define lp(i, n)    for(int i = 0; i<n; i++)
#define INF 200000000
#define mod 1000000007
/*
    add to a multiset. at each, get the lower bound to the value
    we do this because we want to minimize each step. i.e if you do that then there will be at least one sequence that works (at least one element will be less than one element in another ...)
*/
int main()
{
   int n;
   cin>>n;
   multiset<int> s;
   while(n--){
    int x;
    cin>>x;
    auto it = s.lower_bound(x);
    if(it == s.end()) s.insert(x);
    else{
        s.erase(it);
        s.insert(x);
    }
   }
   cout<<s.size();
}
