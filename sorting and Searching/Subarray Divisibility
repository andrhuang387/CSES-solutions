#include <bits/stdc++.h>
using namespace std;
#define lp(i, n)    for(int i = 0; i<n; i++)
#define pb push_back
#define s second
#define f first
#define lli long long int
void faster()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
}
/*
    get prefix sums
    at each prefix sum find the number of prefix sums of the same mod and add that (we can just remove it)
    if the remainder is negative because total is negative, add n to it
*/
int main() {
    lli n;
    cin>>n;
    vector<lli> a;
    lp(i,n){
        lli x;cin>>x;a.pb(x);
    }
    map<lli,lli> psum;
    psum[0]++;
    lli total = 0;
    lli ans  = 0;
    for(auto it: a){
        total += it;
        lli rem = total%n;
        if(rem<0) rem+=n;
        ans += psum[rem];
        psum[rem]++;
    }
    cout<<ans<<endl;
}
