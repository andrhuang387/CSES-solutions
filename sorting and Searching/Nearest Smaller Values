#include <bits/stdc++.h>
using namespace std;
#define lp(i, n)    for(int i = 0; i<n; i++)
#define pb push_back
#define s second
#define f first
#define lli long long int
void faster()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
}
/*
    use deque.  (could have used a vector/stack)
    composed of 3 steps
    remove values larger than it
    get the closest value
    add current value
*/
int main() {
    lli n;
    cin>>n;
    vector<lli> a;
    lp(i,n){
        lli x;cin>>x;a.pb(x);
    }
    deque<pair<int,int>> smallest;
    smallest.pb({0, 0});
    int pos = 0;
    for(int i = 0 ; i <a.size(); i++){
        while(smallest.size() >  0 &&  smallest.back().f >=a[i]) smallest.pop_back();


        ///get value
        cout<< smallest.back().s<< " ";
        ///add
        smallest.pb({a[i], i+1});
    }
    return 0;
}
