#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define f first
#define s second
#define pb push_back
#define MAXN 1001
#define INF 1000000000000000009
#define mod 1000000007
#define loop(i,a,b) for  (int i=(a); i<= (signed)(b); i++)
#define lp(i,a) for(int i = 0;i<(signed)(a); i++)
typedef vector<lli> vi;
/*
   salary queries
   ordered set of pairs that contains <value, position> 
   order_of_key is(val, large second value)  - (val2  -1, same large inf value)
*/
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update>

int main() {
   //freopen("D://inp.txt", "r", stdin);
   int n,q;
   cin>>n>>q;
   ordered_set oset;
   vi a(n);

   loop(i,1, n){
    cin>>a[i];
    oset.insert({a[i], i});
   }
   lp(i,q){
      char t;
      int x,y;
      cin>>t>>x>>y;
      if(t == '!'){
        oset.erase({a[x], x});
        a[x]  = y;
        oset.insert({a[x], x});
      }
      else {
        cout<<oset.order_of_key({y,mod}) - oset.order_of_key({x-1,mod})<<endl;
      }
   }

}
